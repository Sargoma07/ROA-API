services:
  roa.db:
    container_name: "roa.db"
    image: mongo:latest
    labels:
      - "app.roa"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: rootpassword
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data_container:/data/db
  
  roa.rest.api:
    image: roa.rest.api
    container_name: "roa.rest.api"
    labels:
      - "app.roa"
      - "app.roa.api"
      - "app.roa.api.rest"
    depends_on:
      - "roa.db"
    build:
      context: .
      dockerfile: ROA.Rest.API/Dockerfile
    ports:
      - "8080"
    volumes:
      - api_data_protection_container:/root/.aspnet/DataProtection-Keys
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
  
  roa.inventory.api:
    image: roa.inventory.api
    container_name: "roa.inventory.api"
    labels:
      - "app.roa"
      - "app.roa.api"
      - "app.roa.api.inventory"
    depends_on:
      - "roa.db"
    build:
      context: .
      dockerfile: ROA.Inventory.API/Dockerfile
    ports:
      - "8080"
    volumes:
      - api_data_protection_container:/root/.aspnet/DataProtection-Keys
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      
  roa.db.migrations:
    image: roa-db-migrations
    container_name: "roa.db.migrations"
    labels:
      - "app.roa"
    depends_on:
      - "roa.db"
    build:
      context: .
      dockerfile: Roa.Data.Migrations/Dockerfile
      
  nginx:
    image: nginx:latest
    container_name: "roa.nginx"
    labels:
      - "app.roa"
      - "app.roa.nginx"
    volumes:
      - ./devops/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./devops/nginx/default.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "5000:80"
      - "5001:443"
    depends_on:
      - "roa.rest.api"
      - "roa.inventory.api"

volumes:
  mongodb_data_container:
  api_data_protection_container:
    